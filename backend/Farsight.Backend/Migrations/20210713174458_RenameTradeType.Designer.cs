// <auto-generated />
using System;
using Farsight.Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Farsight.Backend.Migrations
{
    [DbContext(typeof(FarsightBackendDbContext))]
    [Migration("20210713174458_RenameTradeType")]
    partial class RenameTradeType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Farsight.Backend.Models.Holding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Ticker")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Holdings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6865a7fa-6866-4516-9002-53cc8386991e"),
                            PortfolioId = new Guid("108e7c96-ea21-44f2-9cbe-db4237c2d1dd"),
                            Ticker = "AAPL"
                        },
                        new
                        {
                            Id = new Guid("f5f1e765-a3bb-44bb-89b9-52ab8eab9db4"),
                            PortfolioId = new Guid("108e7c96-ea21-44f2-9cbe-db4237c2d1dd"),
                            Ticker = "MSFT"
                        });
                });

            modelBuilder.Entity("Farsight.Backend.Models.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("108e7c96-ea21-44f2-9cbe-db4237c2d1dd"),
                            Name = "Portfolio 1",
                            OwnerId = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9")
                        },
                        new
                        {
                            Id = new Guid("41881c20-df28-43df-8e1c-e42748181ea3"),
                            Name = "Portfolio 2",
                            OwnerId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Farsight.Backend.Models.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Fees")
                        .HasColumnType("numeric");

                    b.Property<Guid>("HoldingId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("TradeType")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("HoldingId");

                    b.ToTable("Trades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5df7c00b-3cfd-48e7-a674-6aee0f120313"),
                            Fees = 0m,
                            HoldingId = new Guid("6865a7fa-6866-4516-9002-53cc8386991e"),
                            Quantity = 10,
                            TradeType = 0,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = new Guid("850941ee-b257-4439-b8b6-95a0edc55200"),
                            Fees = 1m,
                            HoldingId = new Guid("f5f1e765-a3bb-44bb-89b9-52ab8eab9db4"),
                            Quantity = 6,
                            TradeType = 0,
                            UnitPrice = 250m
                        });
                });

            modelBuilder.Entity("Farsight.Backend.Models.Holding", b =>
                {
                    b.HasOne("Farsight.Backend.Models.Portfolio", "Portfolio")
                        .WithMany("Holdings")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Farsight.Backend.Models.Trade", b =>
                {
                    b.HasOne("Farsight.Backend.Models.Holding", "Holding")
                        .WithMany("Trades")
                        .HasForeignKey("HoldingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holding");
                });

            modelBuilder.Entity("Farsight.Backend.Models.Holding", b =>
                {
                    b.Navigation("Trades");
                });

            modelBuilder.Entity("Farsight.Backend.Models.Portfolio", b =>
                {
                    b.Navigation("Holdings");
                });
#pragma warning restore 612, 618
        }
    }
}
